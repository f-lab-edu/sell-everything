<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.souljit2.selleverything.domain.post.mapper.PostMapper">
    <select id="getPostById" resultType="com.souljit2.selleverything.domain.post.model.PostVO">
        SELECT p.id,
               p.postTitle,
               p.postContents,
               p.postItemPrice,
               p.postItemName,
               p.postCategory,
               p.likeCount,
               p.commentCount,
               p.memberIdFk,
               m.id             as buyerId,
               m.memberNickname as buyerNickname,
               pr.id as purchaseRequestId,
               p.createdAt,
               p.updatedAt
        FROM post p
                 LEFT OUTER JOIN purchase_request pr ON p.id = pr.postIdFk
                 LEFT OUTER JOIN member m ON m.id = pr.memberIdFk
        WHERE p.id = #{id}
    </select>

    <select id="getPosts" resultType="com.souljit2.selleverything.domain.post.model.PostVO">
        SELECT p.id,
               p.postTitle,
               p.postContents,
               p.postItemPrice,
               p.postItemName,
               p.postCategory,
               p.likeCount,
               p.commentCount,
               p.memberIdFk,
               m.id             as buyerId,
               m.memberNickname as buyerNickname,
               pr.id as purchaseRequestId,
               p.createdAt,
               p.updatedAt
        FROM post p
                 LEFT OUTER JOIN purchase_request pr ON p.id = pr.postIdFk
                 LEFT OUTER JOIN member m ON m.id = pr.memberIdFk
        WHERE p.id = #{id}
           OR p.postTitle = #{postTitle}
           OR p.postItemName = #{postItemName}
           OR p.postCategory = #{postCategory}
           OR p.memberIdFk = #{memberIdFk}
    </select>

    <insert id="createPost" parameterType="com.souljit2.selleverything.domain.post.model.PostDTO">
        INSERT
        INTO post (postTitle,
                   postContents,
                   postItemPrice,
                   postItemName,
                   postCategory,
                   memberIdFk)
        VALUES (#{postTitle},
                #{postContents},
                #{postItemPrice},
                #{postItemName},
                #{postCategory},
                #{memberIdFk})
    </insert>

    <update id="updatePostById">
        UPDATE post
        SET postTitle     = #{newPost.postTitle},
            postContents  = #{newPost.postContents},
            postItemPrice = #{newPost.postItemPrice},
            postItemName  = #{newPost.postItemName},
            postCategory  = #{newPost.postCategory}
        WHERE id = #{id}
          AND memberIdFk = #{sessionMemberId}
    </update>

    <delete id="deletePostById">
        DELETE
        FROM post
        WHERE id = #{id}
          AND memberIdFk = #{sessionMemberId}
    </delete>

    <update id="increasePostLikeCountById">
        UPDATE post
        SET likeCount = CASE WHEN likeCount >= 0 THEN likeCount + 1 ELSE 0 END
        WHERE id = #{id}
    </update>

    <update id="decreasePostLikeCountById">
        UPDATE post
        SET likeCount = CASE WHEN likeCount > 0 THEN likeCount - 1 ELSE 0 END
        WHERE id = #{id}
    </update>

    <update id="increasePostCommentCountById">
        UPDATE post
        SET commentCount = CASE WHEN commentCount >= 0 THEN commentCount + 1 ELSE 0 END
        WHERE id = #{id}
    </update>

    <update id="decreasePostCommentCountById">
        UPDATE post
        SET commentCount = CASE WHEN commentCount > 0 THEN commentCount - 1 ELSE 0 END
        WHERE id = #{id}
    </update>

</mapper>